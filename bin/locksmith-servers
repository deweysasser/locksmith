#!/bin/bash

# Purpose:  manage the servers list

help() {
       cat<<EOF
usage: locksmith servers COMMAND options
EOF
}

# command add:  add a server to the list
add() {
    cp "$ServersFile" "$ServersFile.bak"
    ( 
	for s in "$@" ; do
	    echo "$s"
	done
	cat "$ServersFile.bak"
    ) | sort -u > "$ServersFile"
}


# command list:  show the servers in the list
list() {
    test -f "$ServersFile" && cat "$ServersFile"
}

# command rm:  remove a server from the list
rm() {
    for s in "$@" ;do 
	cp "$ServersFile" "$ServersFile.bak"
	egrep -v "^$s\$" "$ServersFile.bak" | sort -u > "$ServersFile"
    done
}

# command fetch:  fetch the keys from a server or servers
fetch() {
    sdir=`ensureConfigDir servers`
    if [ $# -lt 1 ] ; then
	servers=`list`
    else
	servers="$*"
    fi
    for s in $servers; do
	verbose "fetching from $s"
	dir=`fileEscape $sdir/$s`
	test -d "$dir" ||  mkdir -p "$dir"
	file=`fileEscape $sdir/$s/authorized_keys`
	# Remember the server for furture reference
	add "$s"
	ssh "$s" cat .ssh/authorized_keys > $file
	enrollKey "$file"
	show "$s"
    done
}

show() {
    sdir=`ensureConfigDir servers`
    for s in ${*:-`list`}; do
	verbose "$s:"
	file=`fileEscape $sdir/$s/authorized_keys`
	if [ -f $file ] ; then
	    showKeys "$file"
	fi
    done
}

status() {
    sdir=`ensureConfigDir servers`
    for s in ${*:-`list`}; do
	echo "$s:"
	auth=`fileEscape $sdir/$s/authorized_keys`
	add=`fileEscape $sdir/$s/pending-additions.txt`
	showKeys $auth | grep EXPIRED 

	if [ -f "$add" ] ; then
	    echo "keys to add:"
	    showKeys $add 
	fi
	
    done
}

update() {
    sdir=`ensureConfigDir servers`
    for s in ${*:-`list`}; do
	verbose "$s:"
	fetch
	auth=`fileEscape $sdir/$s/authorized_keys`
	newauth=`fileEscape $sdir/$s/authorized_keys.new`
	add=`fileEscape $sdir/$s/pending-additions.txt`

	expired=`getExpiredKeysRegexp`

	cat "$auth" "$add" | perl -n -e "print unless /$expired/" > $newauth

	scp $newauth $s:.ssh/authorized_keys && (mv -f $newauth $auth; rm -f $add; echo "$s updated") || echo "$s update failed"

	if [ -f $file ] ; then
	    showKeys "$auth"
	fi
    done
}

add-key() {
    if [ $# -lt 1 ] ; then
	echo "You must specifiy a key to add"
	exit 1
    fi

    key=`findKey $1`
    shift

    sdir=`ensureConfigDir servers`
    for s in ${*:-`list`}; do
	verbose "Adding to $s:"
	file=`fileEscape $sdir/$s/pending-additions.txt`
	echo "$key" >> $file
	resortKeyfile $file
	if [ -f $file ] ; then
	    showKeys "$file"
	fi
    done
}


source `dirname $0`/locksmith-common

mainloop list "$@" 


   