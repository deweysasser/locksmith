#!/bin/bash

# COMMAND HELP:  keys -- manage and manipulate keys

# purpose:  manage keys

# HELP: enroll KEY... 
#    -- enroll a key into the locksmith key list.
#       This does NOT add it to any server.  See locksmith servers add-key
#       for that.

command_enroll() {
    enrollKey "$@"
}

# HELP:  list [STRING]
#    -- list keys matching STRING or all keys if not STRING is given
command_list() {
    showKeys "$KeysFile" "$@"
}

# HELP:  show 
#    -- an alias for list
command_show() {
    command_list "$@"
}

# HELP:  whereis KEY [KEY...]
#    -- list the servers on which KEY(s) are found

command_whereis() {

    if [ $# -lt 1 ] ; then
	locksmith help keys
	exit 1
    fi

    servers=`getConfigDir`/servers
    for k in "$@"; do
	echo "$k:"
	grep -l $k $servers/*/authorized_keys | perl -n -e 'if (/([\w-]+)\/authorized_keys/) { $s=$1; $s =~ s/_/@/; push(@k,$s);} END { print "  " . join(", ", @k) . "\n" }'
    done
}

# HELP:  expired
#    -- show a list of all expired keys
command_expired() { 
    if [ "$#" -lt 1 ] ; then
	showKeys "$ExpiredKeysFile"
	return
    fi
}

command_expiredre() { 
    getExpiredKeysRegexp
}

# HELP:  expire KEY...
#    -- expire the given key
command_expire() { 
    if [ "$#" -lt 1 ] ; then
	echo "You must specify a key to expire (perhaps you wanted 'expired'?)"
	return
    fi

    grep "$1" "$KeysFile" | while read key ; do
	echo -n  "Expiring " ; showKeys $key
	echo $key >> "$ExpiredKeysFile"
    done

    resortKeyfile "$ExpiredKeysFile"
}

source `dirname $0`/locksmith-common

mainloop keys list "$@"
